JavaScript provides many types of events that can be used to handle user interactions. Below are some of the main event categories along with examples:

1. Mouse Events:
================
These events occur when a user interacts with the mouse.

Example: Click Event
<button id="btn">Click Me</button>
<p id="msg"></p>

<script>
    document.getElementById("btn").addEventListener("click", function() {
        document.getElementById("msg").innerText = "Button Clicked!";
    });
</script>
Other Mouse Events
dblclick – Double-clicking an element.
mousedown – When the mouse button is pressed down.
mouseup – When the mouse button is released.
mouseover – When the mouse enters an element.
mouseout – When the mouse leaves an element.
2. Keyboard Events
Triggered when the user presses or releases a key.

Example: Key Press Event

<input type="text" id="inputField" placeholder="Type something">
<p id="keyMsg"></p>

<script>
    document.getElementById("inputField").addEventListener("keypress", function(event) {
        document.getElementById("keyMsg").innerText = "You pressed: " + event.key;
    });
</script>
Other Keyboard Events
keydown – When a key is pressed down.
keyup – When a key is released.
3. Form Events
These events are triggered when interacting with form elements.

Example: Input Change Event

<select id="dropdown">
    <option value="apple">Apple</option>
    <option value="banana">Banana</option>
</select>
<p id="fruitMsg"></p>

<script>
    document.getElementById("dropdown").addEventListener("change", function() {
        document.getElementById("fruitMsg").innerText = "Selected: " + this.value;
    });
</script>
Other Form Events
submit – When a form is submitted.
focus – When an input field gains focus.
blur – When an input field loses focus.
4. Window Events
These events relate to the browser window.

Example: Window Resize Event

<p id="sizeMsg">Resize the window!</p>

<script>
    window.addEventListener("resize", function() {
        document.getElementById("sizeMsg").innerText = "New Width: " + window.innerWidth;
    });
</script>
Other Window Events
load – When the page fully loads.
scroll – When the user scrolls the page.
unload – When the page is closed.
5. Document Events
Triggered when the document is loaded or interacted with.

Example: DOMContentLoaded Event

<p id="docMsg"></p>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        document.getElementById("docMsg").innerText = "Document Loaded!";
    });
</script>
Other Document Events
visibilitychange – When the tab becomes visible/hidden.

6. Clipboard Events
These events are related to copy and paste actions.

Example: Copy Event

<input type="text" value="Copy this text" id="copyText">
<p id="copyMsg"></p>

<script>
    document.getElementById("copyText").addEventListener("copy", function() {
        document.getElementById("copyMsg").innerText = "Text Copied!";
    });
</script>
Other Clipboard Events
paste – When content is pasted.
cut – When content is cut.

7. Media Events
Triggered for audio or video elements.

Example: Play Event

<video id="myVideo" width="300" controls>
    <source src="video.mp4" type="video/mp4">
</video>
<p id="videoMsg"></p>

<script>
    document.getElementById("myVideo").addEventListener("play", function() {
        document.getElementById("videoMsg").innerText = "Video is playing!";
    });
</script>
Other Media Events
pause – When media is paused.
ended – When media ends.
Conclusion
JavaScript provides a wide range of events to handle user interactions. These include:

Mouse Events (click, mouseover, etc.)
Keyboard Events (keydown, keypress, etc.)
Form Events (submit, change, etc.)
Window Events (resize, scroll, etc.)
Document Events (DOMContentLoaded, visibilitychange)
Clipboard Events (copy, paste)
Media Events (play, pause)

